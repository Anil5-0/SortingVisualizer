{"version":3,"sources":["components/Header.js","sortingAlgo/mergeSort.js","sortingAlgo/heapSort.js","sortingAlgo/quickSort.js","components/SortingVisualizer.jsx","sortingAlgo/insertionSort.js","sortingAlgo/selectionSort.js","sortingAlgo/bubbleSort.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","onClick","this","props","resetArray","mergeSort","insertionSort","bubbleSort","quickSort","heapSort","selectionSort","window","location","reload","Component","getMergeSortAnimations","array","animations","length","auxArr","slice","mergeSortHelper","mainArr","startIdx","endIdx","midIdx","Math","floor","i","j","k","push","doMerge","getHeapSortAnimations","n","heapify","lt","rt","largest","getQuickSortAnimations","low","high","pi","pivot","partition","SortingVisualizer","applyAnimations","arrayBars","document","getElementsByClassName","key","barOneIdx","barTwoIdx","barOneStyle","style","barTwoStyle","setTimeout","backgroundColor","height","state","color","newHeight","insertionSortHelper","getInsertionSortAnimations","barIdx","barStyle","minIdx","selectionSortHelper","getSelectionSortAnimations","swapped","temp","bubbleSortHelper","getBubbleSortAnimations","min","max","random","setState","map","value","idx","React","App","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ecafb292.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Header.css';\r\n\r\nexport class Header extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"navBar\">\r\n                <button onClick={this.props.resetArray}>Generate New Array</button>\r\n                <button onClick={this.props.mergeSort}>Merge Sort</button>\r\n                <button onClick={this.props.insertionSort}>Insertion Sort</button>\r\n                <button onClick={this.props.bubbleSort}>Bubble Sort</button>\r\n                <button onClick={this.props.quickSort}>Quick Sort</button>\r\n                <button onClick={this.props.heapSort}>Heap Sort</button>\r\n                <button onClick={this.props.selectionSort}>Selection Sort</button>\r\n                <button onClick={() => window.location.reload(false)}>Refresh</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","export function getMergeSortAnimations(array){\r\n    const animations = [];\r\n    if(array.length<=1) return array;\r\n    const auxArr = array.slice();\r\n    mergeSortHelper(array,0,array.length-1,auxArr,animations);\r\n    return animations;\r\n}\r\n\r\nfunction mergeSortHelper(mainArr,startIdx,endIdx,auxArr,animations){\r\n    if(startIdx===endIdx) return;\r\n    const midIdx = Math.floor((startIdx+endIdx)/2);\r\n    mergeSortHelper(auxArr,startIdx,midIdx,mainArr,animations);\r\n    mergeSortHelper(auxArr,midIdx+1,endIdx,mainArr,animations);\r\n    doMerge(mainArr,startIdx,midIdx,endIdx,auxArr,animations);\r\n}\r\n\r\nfunction doMerge(mainArr,startIdx,midIdx,endIdx,auxArr,animations){\r\n    let i = startIdx;\r\n    let j = midIdx+1;\r\n    let k = startIdx;\r\n    while(i<=midIdx&&j<=endIdx){\r\n        animations.push([i,j]);\r\n        animations.push([i,j]);\r\n        if(auxArr[i]<=auxArr[j]){\r\n            animations.push([k,auxArr[i]]);\r\n            mainArr[k++] = auxArr[i++];\r\n        }\r\n        else{\r\n            animations.push([k,auxArr[j]]);\r\n            mainArr[k++] = auxArr[j++];\r\n        }\r\n    }\r\n\r\n    while(i<=midIdx){\r\n        animations.push([i,i]);\r\n        animations.push([i,i]);\r\n        animations.push([k,auxArr[i]]);\r\n        mainArr[k++] = auxArr[i++];\r\n    }\r\n\r\n    while(j<=endIdx){\r\n        animations.push([j,j]);\r\n        animations.push([j,j]);\r\n        animations.push([k,auxArr[j]]);\r\n        mainArr[k++] = auxArr[j++];\r\n    }\r\n}","export function getHeapSortAnimations(array){\r\n    const animations = [];\r\n    if(array.length<=1) return array;\r\n    heapSort(array,array.length,animations);\r\n    return animations;\r\n}\r\n\r\n\r\nfunction heapify(array,n,i,animations){\r\n\tlet lt = (2*i)+1, rt = (2*i)+2;\r\n  let largest = i;\r\n  if(lt<n)\r\n    animations.push([-1,lt,largest]);\r\n  if(lt<n&&array[lt]>array[largest])\r\n      largest = lt;\r\n  if(rt<n)\r\n    animations.push([-1,rt,largest]);\r\n  if(rt<n&&array[rt]>array[largest])\r\n      largest = rt;\r\n  \r\n  if(largest!==i){\r\n    animations.push([-2,i,largest]);\r\n  \t[array[i],array[largest]] = [array[largest],array[i]];\r\n    heapify(array,n,largest,animations);\r\n  }\r\n}\r\n\r\nfunction heapSort(array,n,animations){\r\n\t for(let i=Math.floor(n/2)-1;i>=0;i--)\r\n   \t\theapify(array,n,i,animations);\r\n   for(let i=n-1;i>=0;i--){\r\n      animations.push([-2,0,i]);\r\n   \t  [array[0],array[i]] = [array[i],array[0]];\r\n      heapify(array,i,0,animations);\r\n   }\r\n}\r\n\r\n","export function getQuickSortAnimations(array){\r\n    const animations = [];\r\n    if(array.length<=1) return array;\r\n    quickSort(array,0,array.length-1,animations);\r\n    return animations;\r\n}\r\n\r\n\r\nfunction partition(array,low,high,animations){\r\n    let pivot = array[high];\r\n    let i=low-1;\r\n    for(let j=low;j<=high-1;j++){\r\n        if(array[j]<=pivot){\r\n            animations.push([-1,j,high]);\r\n            i++;\r\n            [array[i],array[j]] = [array[j],array[i]];\r\n            animations.push([-2,i,j]);\r\n        }\r\n    }\r\n    [array[i+1],array[high]] = [array[high],array[i+1]];\r\n    animations.push([-2,i+1,high]);\r\n    return (i+1);\r\n}\r\n\r\n\r\nfunction quickSort(array,low,high,animations){\r\n    if(low<high){\r\n        let pi = partition(array,low,high,animations);\r\n        quickSort(array,low,pi-1,animations);\r\n        quickSort(array,pi+1,high,animations);\r\n    }\r\n}","import React from 'react'\r\nimport './SortingVisualizer.css';\r\nimport {Header} from '../components/Header';\r\nimport { getMergeSortAnimations } from '../sortingAlgo/mergeSort'\r\nimport { getBubbleSortAnimations } from '../sortingAlgo/bubbleSort';\r\nimport { getSelectionSortAnimations } from '../sortingAlgo/selectionSort';\r\nimport { getInsertionSortAnimations } from '../sortingAlgo/insertionSort';\r\nimport { getHeapSortAnimations } from '../sortingAlgo/heapSort';\r\nimport { getQuickSortAnimations } from '../sortingAlgo/quickSort';\r\n \r\nconst ANIMATION_SPEED_MS = 1;\r\nconst PRIMARY_COLOR = 'turquoiuse';\r\nconst SECONDARY_COLOR = 'red';\r\nconst NUMBER_OF_ARRAY_BARS = 310;\r\n\r\nexport default class SortingVisualizer extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            array: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.resetArray();\r\n    }\r\n\r\n\r\n    applyAnimations = (animations)=>{\r\n        for(let i=0;i<animations.length;i++){\r\n            const arrayBars = document.getElementsByClassName('array-bar');\r\n            const [key,barOneIdx,barTwoIdx] = animations[i];\r\n            const barOneStyle = arrayBars[barOneIdx].style;\r\n            const barTwoStyle = arrayBars[barTwoIdx].style;\r\n            const color = SECONDARY_COLOR;\r\n            if(key===-1){\r\n                setTimeout(()=>{\r\n                    barOneStyle.backgroundColor = color;\r\n                    barTwoStyle.backgroundColor = color;\r\n                },i*ANIMATION_SPEED_MS);\r\n            }\r\n            else{\r\n                setTimeout(()=>{\r\n                    [barOneStyle.height,barTwoStyle.height] = [barTwoStyle.height,barOneStyle.height];\r\n                },i*ANIMATION_SPEED_MS);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    heapSort = ()=>{\r\n        const animations = getHeapSortAnimations(this.state.array);\r\n        this.applyAnimations(animations);\r\n    }\r\n\r\n\r\n\r\n    quickSort = ()=>{\r\n        const animations = getQuickSortAnimations(this.state.array);\r\n        this.applyAnimations(animations);\r\n    }\r\n\r\n    mergeSort = ()=>{\r\n       const animations = getMergeSortAnimations(this.state.array);\r\n       for(let i=0;i<animations.length;i++){\r\n           const arrayBars = document.getElementsByClassName('array-bar');\r\n           const isColorChange = i%3 !== 2;\r\n           if(isColorChange){\r\n                const [barOneIdx,barTwoIdx] = animations[i];\r\n                const barOneStyle = arrayBars[barOneIdx].style;\r\n                const barTwoStyle = arrayBars[barTwoIdx].style;\r\n                const color = (i%3 === 0)? SECONDARY_COLOR : PRIMARY_COLOR;\r\n                barOneStyle.backgroundColor = color;\r\n                barTwoStyle.backgroundColor = color;\r\n                setTimeout(()=>{\r\n                    barOneStyle.backgroundColor = \"purple\";\r\n                    barTwoStyle.backgroundColor = \"purple\"; \r\n                }, i*ANIMATION_SPEED_MS);\r\n           }\r\n           else{\r\n            setTimeout(()=>{\r\n                const [barOneIdx,newHeight] = animations[i];\r\n                const barOneStyle = arrayBars[barOneIdx].style;\r\n                barOneStyle.height = `${newHeight}px`;\r\n            }, i*ANIMATION_SPEED_MS);\r\n           }\r\n        }\r\n    }\r\n\r\n    insertionSort = ()=>{\r\n        const animations = getInsertionSortAnimations(this.state.array);\r\n        for(let i=0;i<animations.length;i++){\r\n            const arrayBars = document.getElementsByClassName('array-bar');\r\n            const [barOneIdx,barTwoIdx] = animations[i];\r\n            if(barOneIdx!==-1&&barTwoIdx!==-1){\r\n                const barOneStyle = arrayBars[barOneIdx].style;\r\n                const barTwoStyle = arrayBars[barTwoIdx].style;\r\n                const color = SECONDARY_COLOR;\r\n                setTimeout(()=>{\r\n                    barOneStyle.backgroundColor = color;\r\n                    barTwoStyle.backgroundColor = color;\r\n                },i*ANIMATION_SPEED_MS);\r\n            }\r\n            else{\r\n                i=i+1;\r\n                const [barIdx,newHeight] = animations[i];\r\n                const barStyle = arrayBars[barIdx].style;\r\n                setTimeout(()=>{\r\n                    barStyle.height = `${newHeight}px`;\r\n                    barStyle.backgroundColor = 'purple';\r\n                },i*ANIMATION_SPEED_MS);   \r\n            }\r\n        }\r\n    }\r\n\r\n    selectionSort = ()=>{\r\n        const animations = getSelectionSortAnimations(this.state.array);\r\n        for(let i=0;i<animations.length;i++){\r\n            const arrayBars = document.getElementsByClassName('array-bar');\r\n            const [barOneIdx,barTwoIdx] = animations[i];\r\n            if(barOneIdx!==-1 &&barTwoIdx!==-1){\r\n                const barOneStyle = arrayBars[barOneIdx].style;\r\n                const barTwoStyle = arrayBars[barTwoIdx].style;\r\n                const color = SECONDARY_COLOR;\r\n                setTimeout(()=>{\r\n                    barOneStyle.backgroundColor = color;\r\n                    barTwoStyle.backgroundColor = color;\r\n                },i*ANIMATION_SPEED_MS);\r\n            }\r\n            else{\r\n                i=i+1;\r\n                setTimeout(()=>{\r\n                    const [barOneIdx,barTwoIdx] = animations[i];\r\n                    const barOneStyle = arrayBars[barOneIdx].style;\r\n                    const barTwoStyle = arrayBars[barTwoIdx].style;\r\n                    [barOneStyle.height,barTwoStyle.height] = [barTwoStyle.height,barOneStyle.height];\r\n                    barOneStyle.backgroundColor = 'purple';\r\n                },i*ANIMATION_SPEED_MS);\r\n            }\r\n        }\r\n    }\r\n\r\n    bubbleSort = ()=>{\r\n        const animations = getBubbleSortAnimations(this.state.array);\r\n        for(let i=0;i<animations.length;i++){\r\n            const arrayBars = document.getElementsByClassName('array-bar');\r\n            const isColorChange = (i%3 !== 2);\r\n            if(isColorChange){\r\n                const [ barOneIdx,barTwoIdx ] = animations[i];\r\n                const barOneStyle = arrayBars[barOneIdx].style;\r\n                const barTwoStyle = arrayBars[barTwoIdx].style;\r\n                const color = (i%3===0)?SECONDARY_COLOR:PRIMARY_COLOR;\r\n                setTimeout(()=>{\r\n                    barOneStyle.backgroundColor = color;\r\n                    barTwoStyle.backgroundColor = color;\r\n                }, i*ANIMATION_SPEED_MS);\r\n             }\r\n             else{\r\n                setTimeout(()=>{\r\n                  const [barOneIdx,barTwoIdx] = animations[i];\r\n                  if(barOneIdx!==-1&&barTwoIdx!==-1){ \r\n                    const barOneStyle = arrayBars[barOneIdx].style;\r\n                    const barTwoStyle = arrayBars[barTwoIdx].style;\r\n                    [barOneStyle.height,barTwoStyle.height] = [barTwoStyle.height,barOneStyle.height];\r\n                  }\r\n                },i*ANIMATION_SPEED_MS);\r\n             }\r\n        }  \r\n    }\r\n\r\n    resetArray = () => {\r\n        const array = [];\r\n        for(let i=0;i<NUMBER_OF_ARRAY_BARS;i++)\r\n            array.push(randomIntFromIntervals(5,580));\r\n        this.setState({array});\r\n    }\r\n\r\n    render() {\r\n        const { array } = this.state;\r\n        return (\r\n            <div className=\"array-container\">\r\n                <Header resetArray={this.resetArray}\r\n                    mergeSort={this.mergeSort} \r\n                    insertionSort={this.insertionSort} \r\n                    bubbleSort={this.bubbleSort}\r\n                    quickSort={this.quickSort}\r\n                    selectionSort={this.selectionSort}\r\n                    heapSort={this.heapSort}></Header>\r\n                    <div className=\"clr\"></div>\r\n                    <div className=\"container\">\r\n                        {array.map((value,idx)=> (\r\n                            <div className=\"array-bar\" key={idx} style={{height: `${value}px`}}></div>\r\n                        ))}\r\n                    </div>\r\n                    <div className=\"emptyDiv\">&copy;Anil Kumar, 2020</div>\r\n            </div>\r\n        )\r\n    }   \r\n}\r\n\r\n\r\nfunction randomIntFromIntervals(min,max){\r\n    // min and max included\r\n    return Math.floor(Math.random() * (max-min+1)+min);\r\n}\r\n\r\n","export function getInsertionSortAnimations(array){\r\n    const animations = [];\r\n    if(array.length<=1) return array;\r\n    insertionSortHelper(array,animations);\r\n    return animations;\r\n}\r\n\r\nfunction insertionSortHelper(array,animations){\r\n    let i,key,j;\r\n    for(i=1;i<array.length;i++){\r\n        key=array[i];\r\n        j=i-1;\r\n        while(j>=0 && array[j]>key){\r\n            animations.push([i,j]);\r\n            array[j+1]=array[j];\r\n            animations.push([-1,-1]);\r\n            animations.push([j+1,array[j]]);\r\n            j=j-1;\r\n        }\r\n        array[j+1] = key;\r\n        animations.push([-1,-1]);\r\n        animations.push([j+1,key]);\r\n    }\r\n}","export function getSelectionSortAnimations(array){\r\n    const animations = [];\r\n    if(array.length<=1) return array;\r\n    selectionSortHelper(array,animations);\r\n    return animations;\r\n}\r\n\r\nfunction selectionSortHelper(array,animations){\r\n    for(let i=0;i<array.length-1;i++){\r\n        let minIdx = i;\r\n        for(let j=i+1;j<array.length;j++){\r\n            animations.push([i,j]);\r\n            if(array[j]<array[minIdx])\r\n                minIdx = j;\r\n        }\r\n        // Single Line Swap\r\n        [array[i],array[minIdx]] = [array[minIdx],array[i]];\r\n        animations.push([-1,-1]);\r\n        animations.push([i,minIdx]);\r\n    }\r\n}","export function getBubbleSortAnimations(array){\r\n    const animations = [];\r\n    if(array.length<=1) return array;\r\n    bubbleSortHelper(array,animations);\r\n    return animations;\r\n}\r\n\r\nfunction bubbleSortHelper(array,animations){\r\n\tfor(let i=0;i<array.length;i++){\r\n        let swapped = false;\r\n      for(let j=0;j<array.length-i-1;j++){\r\n        animations.push([j,j+1]);\r\n        animations.push([j,j+1]);\r\n        if(array[j]>array[j+1])\r\n        {\r\n          animations.push([j,j+1]);\r\n          let temp=array[j];\r\n          array[j] = array[j+1];\r\n          array[j+1] = temp;\r\n          swapped = true;\r\n        }\r\n        else\r\n            animations.push([-1,-1]);\r\n      }\r\n      if(swapped === false)\r\n          break;\r\n    }\r\n}","import React from 'react';\nimport SortingVisualizer from './components/SortingVisualizer';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SortingVisualizer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}